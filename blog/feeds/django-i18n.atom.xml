<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>datapythonista blog - Django-i18n</title><link href="https://datapythonista.github.io/blog/" rel="alternate"></link><link href="https://datapythonista.github.io/blog/feeds/django-i18n.atom.xml" rel="self"></link><id>https://datapythonista.github.io/blog/</id><updated>2009-12-22T22:52:00+00:00</updated><subtitle>about me</subtitle><entry><title>New localization system already in trunk</title><link href="https://datapythonista.github.io/blog/new-localization-system-already-in.html" rel="alternate"></link><published>2009-12-22T22:52:00+00:00</published><updated>2009-12-22T22:52:00+00:00</updated><author><name>Marc</name></author><id>tag:datapythonista.github.io,2009-12-22:/blog/new-localization-system-already-in.html</id><summary type="html">&lt;p&gt;Just few hours ago, Django's new localization system has been commited to trunk.&lt;div&gt;
&lt;/div&gt;&lt;div&gt;As some of you know, I did most of the work as my Google Summer of Code project, this year. Of course, together with &lt;a href="http://jannisleidel.com/"&gt;Jannis Leidel&lt;/a&gt;, who also did the final steps, including the commit.&lt;/div&gt;&lt;div&gt;
&lt;/div&gt;&lt;div&gt;Summarizing, with …&lt;/div&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Just few hours ago, Django's new localization system has been commited to trunk.&lt;div&gt;
&lt;/div&gt;&lt;div&gt;As some of you know, I did most of the work as my Google Summer of Code project, this year. Of course, together with &lt;a href="http://jannisleidel.com/"&gt;Jannis Leidel&lt;/a&gt;, who also did the final steps, including the commit.&lt;/div&gt;&lt;div&gt;
&lt;/div&gt;&lt;div&gt;Summarizing, with this change Django will format all displayed data, according to user's current locale. For example, the calendar will display Sunday as the first day for users in the States, but Monday for users from most European countries. Also it'll format numbers and dates.&lt;/div&gt;&lt;div&gt;
&lt;/div&gt;&lt;div&gt;You can check the slides I presented at DjangoCon.&lt;/div&gt;&lt;div&gt;&lt;a href="http://docs.google.com/present/view?id=dfbzs3ks_16d26xjbd9"&gt;http://docs.google.com/present/view?id=dfbzs3ks_16d26xjbd9&lt;/a&gt;&lt;/div&gt;&lt;div&gt;
&lt;/div&gt;&lt;div&gt;Note that the setting is no longer USE_FORMAT_I18N (as in the slides), but USE_L10N.&lt;/div&gt;&lt;div&gt;
&lt;/div&gt;&lt;div&gt;You can also check the commit at:&lt;/div&gt;&lt;div&gt;&lt;a href="http://code.djangoproject.com/changeset/11964"&gt;http://code.djangoproject.com/changeset/11964&lt;/a&gt;&lt;/div&gt;&lt;div&gt;
&lt;/div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/p&gt;</content><category term="Django"></category><category term="Django-i18n"></category></entry><entry><title>GSoC: Implementation of additional i18n features on Django</title><link href="https://datapythonista.github.io/blog/gsoc-implementation-of-additional-i18n.html" rel="alternate"></link><published>2009-04-24T19:09:00+01:00</published><updated>2009-04-24T19:09:00+01:00</updated><author><name>Marc</name></author><id>tag:datapythonista.github.io,2009-04-24:/blog/gsoc-implementation-of-additional-i18n.html</id><summary type="html">&lt;p&gt;&lt;span&gt;&lt;span&gt;Here you have my proposal for Google Summer of Code &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;2009. It was approved previous week, and I'll be working on it during this summer.&lt;/span&gt;&lt;/span&gt;&lt;span style="font-size:180%;"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;
&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;The problem
&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;While Django provides an amazing system to translate texts, and displays localized dates in some parts of the admin; it has many data …&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;span&gt;&lt;span&gt;Here you have my proposal for Google Summer of Code &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;2009. It was approved previous week, and I'll be working on it during this summer.&lt;/span&gt;&lt;/span&gt;&lt;span style="font-size:180%;"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;
&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;The problem
&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;While Django provides an amazing system to translate texts, and displays localized dates in some parts of the admin; it has many data that could be internationalized, not it's not yet.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;The information that developers should be able to localize/translate is mainly:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; - &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;All  dates and related information (times, calendars...)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;All  numbers (mainly decimal ones)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Texts  (and any data in general) saved on the database&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;
 &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;More information on these issues can be found in the following blog post and this ticket:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="http://vaig.be/2008/07/django-i18n-status.html"&gt;&lt;span&gt;&lt;span&gt;http://vaig.be/2008/07/django-i18n-status.html&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="http://code.djangoproject.com/ticket/7980"&gt;&lt;span&gt;&lt;span&gt;http://code.djangoproject.com/ticket/7980&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Proposal&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;The proposed solution for improving Django i18n includes several different tasks. Those tasks are:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;ul&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;Import  locale data from CLDR&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;Apply  i18n to Django dates and times&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;Apply  i18n to Django numbers&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;Allow  translating content on the database&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;span&gt;Fix already reported bug about i18n
&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;Next are the details for every task. Note that all those specifications are subject to change, according to discussions with the mentor of the project, Django core developers team, and the main Django community.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Importing locale data
&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;The main repository of locale data is the Common Locale Data Repository (CLDR) by the Unicode Consortium &lt;/span&gt;&lt;/span&gt;http://cldr.unicode.org/.&lt;span&gt;&lt;span&gt; It provides a set of XML files with information such as date, time and number formatting for most languages.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;The idea of this task would be to create a python script (probably as a django-admin command), that will extract all necessary data from those XML files and put it into configuration files on the Django structure. This information will be used by Django to internationalize data on applications.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;The idea of this script is to be used just by Django developers. It would mainly be a one-time execution script, and then it would be executed just when new locales are added (are some are changed).&lt;/p&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;All information gathered from CLDR files could be saved on django/conf/locale/{  language code }/formats/django.po&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;Specific settings imported from CLDR could be (with English localized example):&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; - &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;SHORT_DATETIME_FORMAT  (12-31-2000 11:59 p.m.)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;LONG_DATETIME_FORMAT  (December 31th 2000, 11:59 p.m.)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;SHORT_DATE_FORMAT  (12-31-2000)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;LONG_DATE_FORMAT  (December 31th 2000)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;FIRST_DAY_OF_WEEK  (0 meaning Sunday)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;TIME_FORMAT  (11:59 p.m.)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;YEAR_MONTH_FORMAT  (December of 2000)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;MONTH_DAY_FORMAT  (December 31th)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;
 - &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;DECIMAL_NUMBER  FORMAT (1,000,000.123)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;
 &lt;p&gt;&lt;span&gt;&lt;span&gt;There are some locale based parameters that already exist on Django, on translation files (LC_MESSAGES) and could be deprecated on future releases of Django (when breaking backward compatibility). Those are:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; - &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;DATETIME_FORMAT&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;DATE_FORMAT&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;TIME_FORMAT&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;YEAR_MONTH_FORMAT&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;MONTH_DAY_FORMAT&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;
 &lt;p&gt;For keeping the system flexible, existing default values on settings will be kept. Probably it would be worth to add new ones for the new customizable formats.&lt;/p&gt; &lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Dates, times and calendar i18n&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;All dates and times displayed using Django should use the format defined for the current session locale. This is already implemented for some dates, like the ones displayed in admin's lists. Also a filter for formatting dates already exists in templates, which, together with the formats in the translation files, can do the job. But the good way to do that would be displaying the date by default on the session locale.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;All Django forms (including admin forms) should accept the short date/datetime format of the current locale. Now it's possible to define the accepted formats using parameters of the widget, and this can be kept, but at least support for entering data formatted in current locale should be added. ISO and/or English locale can be kept as well. Existing data on input fields should be displayed in current locale too.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;As Django 1.0 series is maintaining backward compatibility, those changes have to be implemented being compatible with existing behavior by default.&lt;/p&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;The calendar on admin's date/datetime field should also be displayed according to user session locale.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;So basically those are the main tasks required for internationalizing Django dates:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; - &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;Format all python date/datetimes objects using locale settings when converted to string to be displayed. Basically it means models.DateField and models.DateTimeField values on model instances.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;Change  input widgets to display data and to allow entering data on the  format of the current locale.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;Display  admin calendar starting weeks on the day defined for current locale.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;
 &lt;p&gt;&lt;span&gt;&lt;span&gt;With those changes next tickets would be fixed:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; - &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;#1061  About first day on calendars&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;#5526  About accepting non-English formats on input widgets&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;#6231  About the output format of the SelectDateWidget&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;#6449  About default format of displayed dates&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;#6483  About supporting European dates on javascript routines&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;#7509  About supporting different formats on SplitDateTimeWidget&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;#7656  About inheriting i18n features of AdminDateWidget&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;
 &lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Number i18n&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;Right now, Django doesn't provide anything for localizing numbers on applications. All numeric values within Django applications are formatted using American formats. Users from many countries are not used to dealing with the American format, and a simple shop using Django can create confusion among users who, for example, expect the comma to be the decimal separator, and they find the point on prices.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;As for the previous section, changes must be applied keeping backward compatibility.&lt;/p&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;So Django should display, and use by default the language of the current locale to format numbers. Basically that means:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; - &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Format  numbers on templates using current session locale&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Display  and allow entering data using session locale on input widgets&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;
 &lt;p&gt;&lt;span&gt;&lt;span&gt;With those changes next ticket should be fixed:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; - &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;#3940  About comma as decimal separator&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;
 &lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Translating dynamic content&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;Django has an amazing system for translating texts to any language. The only problem of this system is that it can just be used for static content (defined on source files, including templates), and not for dynamic content, created by users after deploying the web site. This can be useful for many different situations like an application that has a product catalog where product names and descriptions have to be translated, or a news website, where news can be translated to any language.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;There are some external applications, widely used, that allow to do that on Django, but all of them have many different problems, like complex and tricky syntax for developers, ugly interface for users, bad design, bad scalability... Main applications are:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; - &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;django-multilingual&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;transdb&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;django-transmeta&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;django-multilingual-model&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;
 &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;A comparison of the two first applications, and some ideas for a better solution, can be found on a presentation at&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="http://docs.google.com/Presentation?docid=dfbzs3ks_7f2z85hvr&amp;amp;hl=en"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;http://docs.google.com/Presentation?docid=dfbzs3ks_7f2z85hvr&amp;amp;hl=en&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;Basically, a good solution to allow Django developers to translate their models should include:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; - &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;An  easy way to specify translatable fields on models (or outside the  models)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;An  easy way to allow translating content using the admin or custom  forms&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Displaying  translated fields in session language by default (allowing to get  the value for a specific value)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;A  scalable way to save translations on the database&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;
 &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;To achieve those targets a lot of analysis is required, so, just some ideas are detailed here.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;For the model syntax there are many different options, some of them can be checked on this blog post, and this poll:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="http://vaig.be/2009/03/django-multilingual-syntax-poll.html"&gt;&lt;span&gt;&lt;span&gt;http://vaig.be/2009/03/django-multilingual-syntax-poll.html&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="http://doodle.com/aicvayf8ss2mxm2h"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;http://doodle.com/aicvayf8ss2mxm2h&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;The most popular one is (using an example):&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
    ::::
    &lt;span&gt;&lt;span&gt;class MyModel(model.Model):&lt;/span&gt;&lt;/span&gt;
     &lt;span&gt;my_field = CharField()&lt;/span&gt;
     &lt;span&gt;my_i18n_field = CharField()&lt;/span&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;class Meta:&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;translate = (&amp;#39;my_i18n_field&amp;#39;,)&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;A way to translate models (and whole applications) without modifying its code would be great, in order to translate applications that already exist.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;For the database backend there are also different options, including:&lt;/p&gt; - &lt;li&gt;To create a field on the model for every translation&lt;/li&gt;&lt;li&gt;To create a related model&lt;/li&gt;
 &lt;p&gt;&lt;span&gt;&lt;span&gt;There is just one generic ticket on Django that would be fixed:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; - &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;#6460  About multilingual content on database&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;
 &lt;p&gt;May be it's not possible having a generic solution that fits most of the user-cases, and in that case could be worth making some modifications on Django to make it easier creating external applications that can do this job.&lt;/p&gt; &lt;h2&gt;Fix i18n bugs&lt;/h2&gt; &lt;p&gt;There are many bugs already accepted on Django trac, that would be fixed on this Summer of Code. A better review will be done, but some of them could be:&lt;/p&gt; - &lt;li&gt;#3907: LocaleMiddleware allows languages not supported by Django&lt;/li&gt;&lt;li&gt;#5494: Javascript catalog doesn't check project level locales&lt;/li&gt;&lt;li&gt;#7050: make-messages should ignore applications with custom localization&lt;/li&gt;
 &lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Timeline&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;The estimated time line for this project, detailed in a weekly basis is:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;ul&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;Week  01: Analysis and working environment setup
&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;Week  02: &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Import CLDR&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;Week  03: Import CLDR&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;Week  04: &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;I18n of dates and numbers&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;Week  05: I18n of dates and numbers&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;Week  06: I18n of dates and numbers&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;Week  07: &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Translation of dynamic content&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;Week  08: Translation of dynamic content&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;Week  09: Translation of dynamic content&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;Week  10: Translation of dynamic content&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;Week  11: Fix i18n bugs&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;Week  12: Fix i18n bugs&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;My dedication to the project will be full time, around 40 hours per week. A total of 480 hours are estimated for the whole project.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;About me&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;My name is Marc Garcia, I'm from Barcelona, Europe, and I'm 29 years old.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;I am studying computer science at Universitat Oberta de Catalunya, an Internet-based university from Barcelona. Currently I'm not working but I have almost 8 years of programming experience (with different technologies, mainly Python, PHP and VB).&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;I started using Django in 2006, and at this time I developed and participated on the development of many websites, as well as many reusable applications for Django.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;As examples of reusable Django applications note:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; - &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;django-stdimage:  Saves ImageField files with standard names, allowing to delete them,  and creating automatic thumbnails.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;Transdb:  Allows translating database content&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;django-transmeta:  Also allows translating database content (different approach)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;django-cart:  Simple cart object to easily add/update/remove products to user  session&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;
 &lt;p&gt; &lt;/p&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;As examples of websites, note next ones:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; - &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;http://elisa.fluendo.com  (main developer)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;http://www.andalucia.org  (developer of some parts, mainly the shop and the registration  system)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;http://www.muchomasqueunregalo.com (developer of the Django part of the web site, including the shopping system and product detail pages).&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;http://www.accopensys.com  (only developer)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;http://www.showroom.es  (only developer)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;http://www.tierratenis.com  (only developer)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;http://www.latelierdelraval.com  (only developer)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;http://www.restaurantalpunt.com  (only developer)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt;
 &lt;p&gt;&lt;span&gt;&lt;span&gt;I'm also one of the two official translators of Django to Castilian Spanish and Catalan. In addition, I was interviewed about localization on Django on &lt;em&gt;This Week in Django&lt;/em&gt; 20 (on 2008-04-27). I maintain a blog with many Django related posts at http://vaig.be.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;</content><category term="Django"></category><category term="Django-i18n"></category></entry></feed>